<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yatop.lambda.base.mapper.MwModelMapper" >
  <resultMap id="BaseResultMap" type="com.yatop.lambda.base.model.MwModel" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="MODEL_ID" property="modelId" jdbcType="BIGINT" />
    <result column="MODEL_NAME" property="modelName" jdbcType="VARCHAR" />
    <result column="MODEL_TYPE" property="modelType" jdbcType="INTEGER" />
    <result column="MODEL_SRC" property="modelSrc" jdbcType="INTEGER" />
    <result column="OWNER_MW_ID" property="ownerMwId" jdbcType="BIGINT" />
    <result column="REL_EXPERIMENT_ID" property="relExperimentId" jdbcType="BIGINT" />
    <result column="REL_JOB_ID" property="relJobId" jdbcType="BIGINT" />
    <result column="REL_NODE_ID" property="relNodeId" jdbcType="BIGINT" />
    <result column="REL_CHAR_ID" property="relCharId" jdbcType="BIGINT" />
    <result column="REF_ALGORITHM_ID" property="refAlgorithmId" jdbcType="BIGINT" />
    <result column="MODEL_FILE_SIZE" property="modelFileSize" jdbcType="BIGINT" />
    <result column="MODEL_FILE" property="modelFile" jdbcType="VARCHAR" />
    <result column="MODEL_SUMMARY_FILE" property="modelSummaryFile" jdbcType="VARCHAR" />
    <result column="MODEL_STATE" property="modelState" jdbcType="INTEGER" />
    <result column="TRAIN_TABLE_ID" property="trainTableId" jdbcType="BIGINT" />
    <result column="TRAIN_COST_TIME" property="trainCostTime" jdbcType="BIGINT" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="LAST_UPDATE_TIME" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="LAST_UPDATE_OPER" property="lastUpdateOper" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_OPER" property="createOper" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    MODEL_ID, MODEL_NAME, MODEL_TYPE, MODEL_SRC, OWNER_MW_ID, REL_EXPERIMENT_ID, REL_JOB_ID, 
    REL_NODE_ID, REL_CHAR_ID, REF_ALGORITHM_ID, MODEL_FILE_SIZE, MODEL_FILE, MODEL_SUMMARY_FILE, 
    MODEL_STATE, TRAIN_TABLE_ID, TRAIN_COST_TIME, DESCRIPTION, STATUS, LAST_UPDATE_TIME, 
    LAST_UPDATE_OPER, CREATE_TIME, CREATE_OPER
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yatop.lambda.base.model.MwModelExample" >
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mw_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.yatop.lambda.base.model.MwModelExample" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from mw_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yatop.lambda.base.model.MwModelExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from mw_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update mw_model
    <set >
      <if test="record.modelId != null" >
        MODEL_ID = #{record.modelId,jdbcType=BIGINT},
      </if>
      <if test="record.modelName != null" >
        MODEL_NAME = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelType != null" >
        MODEL_TYPE = #{record.modelType,jdbcType=INTEGER},
      </if>
      <if test="record.modelSrc != null" >
        MODEL_SRC = #{record.modelSrc,jdbcType=INTEGER},
      </if>
      <if test="record.ownerMwId != null" >
        OWNER_MW_ID = #{record.ownerMwId,jdbcType=BIGINT},
      </if>
      <if test="record.relExperimentId != null" >
        REL_EXPERIMENT_ID = #{record.relExperimentId,jdbcType=BIGINT},
      </if>
      <if test="record.relJobId != null" >
        REL_JOB_ID = #{record.relJobId,jdbcType=BIGINT},
      </if>
      <if test="record.relNodeId != null" >
        REL_NODE_ID = #{record.relNodeId,jdbcType=BIGINT},
      </if>
      <if test="record.relCharId != null" >
        REL_CHAR_ID = #{record.relCharId,jdbcType=BIGINT},
      </if>
      <if test="record.refAlgorithmId != null" >
        REF_ALGORITHM_ID = #{record.refAlgorithmId,jdbcType=BIGINT},
      </if>
      <if test="record.modelFileSize != null" >
        MODEL_FILE_SIZE = #{record.modelFileSize,jdbcType=BIGINT},
      </if>
      <if test="record.modelFile != null" >
        MODEL_FILE = #{record.modelFile,jdbcType=VARCHAR},
      </if>
      <if test="record.modelSummaryFile != null" >
        MODEL_SUMMARY_FILE = #{record.modelSummaryFile,jdbcType=VARCHAR},
      </if>
      <if test="record.modelState != null" >
        MODEL_STATE = #{record.modelState,jdbcType=INTEGER},
      </if>
      <if test="record.trainTableId != null" >
        TRAIN_TABLE_ID = #{record.trainTableId,jdbcType=BIGINT},
      </if>
      <if test="record.trainCostTime != null" >
        TRAIN_COST_TIME = #{record.trainCostTime,jdbcType=BIGINT},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null" >
        LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateOper != null" >
        LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOper != null" >
        CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update mw_model
    set MODEL_ID = #{record.modelId,jdbcType=BIGINT},
      MODEL_NAME = #{record.modelName,jdbcType=VARCHAR},
      MODEL_TYPE = #{record.modelType,jdbcType=INTEGER},
      MODEL_SRC = #{record.modelSrc,jdbcType=INTEGER},
      OWNER_MW_ID = #{record.ownerMwId,jdbcType=BIGINT},
      REL_EXPERIMENT_ID = #{record.relExperimentId,jdbcType=BIGINT},
      REL_JOB_ID = #{record.relJobId,jdbcType=BIGINT},
      REL_NODE_ID = #{record.relNodeId,jdbcType=BIGINT},
      REL_CHAR_ID = #{record.relCharId,jdbcType=BIGINT},
      REF_ALGORITHM_ID = #{record.refAlgorithmId,jdbcType=BIGINT},
      MODEL_FILE_SIZE = #{record.modelFileSize,jdbcType=BIGINT},
      MODEL_FILE = #{record.modelFile,jdbcType=VARCHAR},
      MODEL_SUMMARY_FILE = #{record.modelSummaryFile,jdbcType=VARCHAR},
      MODEL_STATE = #{record.modelState,jdbcType=INTEGER},
      TRAIN_TABLE_ID = #{record.trainTableId,jdbcType=BIGINT},
      TRAIN_COST_TIME = #{record.trainCostTime,jdbcType=BIGINT},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{record.createOper,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="MysqlSuffix" >
    <if test="page != null" >
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
</mapper>