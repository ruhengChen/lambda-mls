<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yatop.lambda.base.mapper.WfFlowMapper" >
  <resultMap id="BaseResultMap" type="com.yatop.lambda.base.model.WfFlow" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="FLOW_ID" property="flowId" jdbcType="BIGINT" />
    <result column="FLOW_NAME" property="flowName" jdbcType="VARCHAR" />
    <result column="OWNER_PROJECT_ID" property="ownerProjectId" jdbcType="BIGINT" />
    <result column="OWNER_EXPERIMENT_ID" property="ownerExperimentId" jdbcType="BIGINT" />
    <result column="LOCK_STATE" property="lockState" jdbcType="INTEGER" />
    <result column="LOCK_MSG" property="lockMsg" jdbcType="VARCHAR" />
    <result column="LAST_SNAPSHOT_ID" property="lastSnapshotId" jdbcType="BIGINT" />
    <result column="NEXT_SNAPSHOT_VERSION" property="nextSnapshotVersion" jdbcType="BIGINT" />
    <result column="NODE_COUNT" property="nodeCount" jdbcType="BIGINT" />
    <result column="NEXT_DELETE_SEQUENCE" property="nextDeleteSequence" jdbcType="BIGINT" />
    <result column="LAST_JOB_ID" property="lastJobId" jdbcType="BIGINT" />
    <result column="FLOW_STATE" property="flowState" jdbcType="INTEGER" />
    <result column="SUMMARY" property="summary" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="LAST_UPDATE_TIME" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="LAST_UPDATE_OPER" property="lastUpdateOper" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_OPER" property="createOper" jdbcType="VARCHAR" />
    <result column="VERSION" property="version" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    FLOW_ID, FLOW_NAME, OWNER_PROJECT_ID, OWNER_EXPERIMENT_ID, LOCK_STATE, LOCK_MSG, 
    LAST_SNAPSHOT_ID, NEXT_SNAPSHOT_VERSION, NODE_COUNT, NEXT_DELETE_SEQUENCE, LAST_JOB_ID, 
    FLOW_STATE, SUMMARY, DESCRIPTION, STATUS, LAST_UPDATE_TIME, LAST_UPDATE_OPER, CREATE_TIME, 
    CREATE_OPER, VERSION
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yatop.lambda.base.model.WfFlowExample" >
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wf_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from wf_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from wf_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update wf_flow
    <set >
      <if test="record.flowId != null" >
        FLOW_ID = #{record.flowId,jdbcType=BIGINT},
      </if>
      <if test="record.flowName != null" >
        FLOW_NAME = #{record.flowName,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerProjectId != null" >
        OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      </if>
      <if test="record.ownerExperimentId != null" >
        OWNER_EXPERIMENT_ID = #{record.ownerExperimentId,jdbcType=BIGINT},
      </if>
      <if test="record.lockState != null" >
        LOCK_STATE = #{record.lockState,jdbcType=INTEGER},
      </if>
      <if test="record.lockMsg != null" >
        LOCK_MSG = #{record.lockMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.lastSnapshotId != null" >
        LAST_SNAPSHOT_ID = #{record.lastSnapshotId,jdbcType=BIGINT},
      </if>
      <if test="record.nextSnapshotVersion != null" >
        NEXT_SNAPSHOT_VERSION = #{record.nextSnapshotVersion,jdbcType=BIGINT},
      </if>
      <if test="record.nodeCount != null" >
        NODE_COUNT = #{record.nodeCount,jdbcType=BIGINT},
      </if>
      <if test="record.nextDeleteSequence != null" >
        NEXT_DELETE_SEQUENCE = #{record.nextDeleteSequence,jdbcType=BIGINT},
      </if>
      <if test="record.lastJobId != null" >
        LAST_JOB_ID = #{record.lastJobId,jdbcType=BIGINT},
      </if>
      <if test="record.flowState != null" >
        FLOW_STATE = #{record.flowState,jdbcType=INTEGER},
      </if>
      <if test="record.summary != null" >
        SUMMARY = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null" >
        LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateOper != null" >
        LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOper != null" >
        CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        VERSION = #{record.version,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update wf_flow
    set FLOW_ID = #{record.flowId,jdbcType=BIGINT},
      FLOW_NAME = #{record.flowName,jdbcType=VARCHAR},
      OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      OWNER_EXPERIMENT_ID = #{record.ownerExperimentId,jdbcType=BIGINT},
      LOCK_STATE = #{record.lockState,jdbcType=INTEGER},
      LOCK_MSG = #{record.lockMsg,jdbcType=VARCHAR},
      LAST_SNAPSHOT_ID = #{record.lastSnapshotId,jdbcType=BIGINT},
      NEXT_SNAPSHOT_VERSION = #{record.nextSnapshotVersion,jdbcType=BIGINT},
      NODE_COUNT = #{record.nodeCount,jdbcType=BIGINT},
      NEXT_DELETE_SEQUENCE = #{record.nextDeleteSequence,jdbcType=BIGINT},
      LAST_JOB_ID = #{record.lastJobId,jdbcType=BIGINT},
      FLOW_STATE = #{record.flowState,jdbcType=INTEGER},
      SUMMARY = #{record.summary,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="MysqlSuffix" >
    <if test="page != null" >
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
</mapper>