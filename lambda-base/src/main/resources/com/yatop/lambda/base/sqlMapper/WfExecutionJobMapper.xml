<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yatop.lambda.base.mapper.WfExecutionJobMapper" >
  <resultMap id="BaseResultMap" type="com.yatop.lambda.base.model.WfExecutionJob" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="JOB_ID" property="jobId" jdbcType="BIGINT" />
    <result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
    <result column="JOB_TYPE" property="jobType" jdbcType="INTEGER" />
    <result column="OWNER_PROJECT_ID" property="ownerProjectId" jdbcType="BIGINT" />
    <result column="REL_FLOW_ID" property="relFlowId" jdbcType="BIGINT" />
    <result column="REL_SNAPSHOT_ID" property="relSnapshotId" jdbcType="BIGINT" />
    <result column="REL_NODE_ID" property="relNodeId" jdbcType="BIGINT" />
    <result column="JOB_DFS_DIR" property="jobDfsDir" jdbcType="VARCHAR" />
    <result column="JOB_LOCAL_DIR" property="jobLocalDir" jdbcType="VARCHAR" />
    <result column="NEXT_TASK_SEQUENCE" property="nextTaskSequence" jdbcType="BIGINT" />
    <result column="JOB_SUBMIT_TIME" property="jobSubmitTime" jdbcType="TIMESTAMP" />
    <result column="JOB_START_TIME" property="jobStartTime" jdbcType="TIMESTAMP" />
    <result column="JOB_END_TIME" property="jobEndTime" jdbcType="TIMESTAMP" />
    <result column="JOB_STATE" property="jobState" jdbcType="INTEGER" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="LAST_UPDATE_TIME" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="LAST_UPDATE_OPER" property="lastUpdateOper" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_OPER" property="createOper" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yatop.lambda.base.model.WfExecutionJob" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
    -->
    <result column="JOB_CONTEXT" property="jobContext" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    JOB_ID, JOB_NAME, JOB_TYPE, OWNER_PROJECT_ID, REL_FLOW_ID, REL_SNAPSHOT_ID, REL_NODE_ID, 
    JOB_DFS_DIR, JOB_LOCAL_DIR, NEXT_TASK_SEQUENCE, JOB_SUBMIT_TIME, JOB_START_TIME, 
    JOB_END_TIME, JOB_STATE, DESCRIPTION, STATUS, LAST_UPDATE_TIME, LAST_UPDATE_OPER, 
    CREATE_TIME, CREATE_OPER
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    JOB_CONTEXT
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yatop.lambda.base.model.WfExecutionJobExample" >
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wf_execution_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yatop.lambda.base.model.WfExecutionJobExample" >
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wf_execution_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.yatop.lambda.base.model.WfExecutionJobExample" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from wf_execution_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yatop.lambda.base.model.WfExecutionJobExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from wf_execution_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update wf_execution_job
    <set >
      <if test="record.jobId != null" >
        JOB_ID = #{record.jobId,jdbcType=BIGINT},
      </if>
      <if test="record.jobName != null" >
        JOB_NAME = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null" >
        JOB_TYPE = #{record.jobType,jdbcType=INTEGER},
      </if>
      <if test="record.ownerProjectId != null" >
        OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      </if>
      <if test="record.relFlowId != null" >
        REL_FLOW_ID = #{record.relFlowId,jdbcType=BIGINT},
      </if>
      <if test="record.relSnapshotId != null" >
        REL_SNAPSHOT_ID = #{record.relSnapshotId,jdbcType=BIGINT},
      </if>
      <if test="record.relNodeId != null" >
        REL_NODE_ID = #{record.relNodeId,jdbcType=BIGINT},
      </if>
      <if test="record.jobDfsDir != null" >
        JOB_DFS_DIR = #{record.jobDfsDir,jdbcType=VARCHAR},
      </if>
      <if test="record.jobLocalDir != null" >
        JOB_LOCAL_DIR = #{record.jobLocalDir,jdbcType=VARCHAR},
      </if>
      <if test="record.nextTaskSequence != null" >
        NEXT_TASK_SEQUENCE = #{record.nextTaskSequence,jdbcType=BIGINT},
      </if>
      <if test="record.jobSubmitTime != null" >
        JOB_SUBMIT_TIME = #{record.jobSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobStartTime != null" >
        JOB_START_TIME = #{record.jobStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobEndTime != null" >
        JOB_END_TIME = #{record.jobEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobState != null" >
        JOB_STATE = #{record.jobState,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null" >
        LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateOper != null" >
        LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOper != null" >
        CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      </if>
      <if test="record.jobContext != null" >
        JOB_CONTEXT = #{record.jobContext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update wf_execution_job
    set JOB_ID = #{record.jobId,jdbcType=BIGINT},
      JOB_NAME = #{record.jobName,jdbcType=VARCHAR},
      JOB_TYPE = #{record.jobType,jdbcType=INTEGER},
      OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      REL_FLOW_ID = #{record.relFlowId,jdbcType=BIGINT},
      REL_SNAPSHOT_ID = #{record.relSnapshotId,jdbcType=BIGINT},
      REL_NODE_ID = #{record.relNodeId,jdbcType=BIGINT},
      JOB_DFS_DIR = #{record.jobDfsDir,jdbcType=VARCHAR},
      JOB_LOCAL_DIR = #{record.jobLocalDir,jdbcType=VARCHAR},
      NEXT_TASK_SEQUENCE = #{record.nextTaskSequence,jdbcType=BIGINT},
      JOB_SUBMIT_TIME = #{record.jobSubmitTime,jdbcType=TIMESTAMP},
      JOB_START_TIME = #{record.jobStartTime,jdbcType=TIMESTAMP},
      JOB_END_TIME = #{record.jobEndTime,jdbcType=TIMESTAMP},
      JOB_STATE = #{record.jobState,jdbcType=INTEGER},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      JOB_CONTEXT = #{record.jobContext,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update wf_execution_job
    set JOB_ID = #{record.jobId,jdbcType=BIGINT},
      JOB_NAME = #{record.jobName,jdbcType=VARCHAR},
      JOB_TYPE = #{record.jobType,jdbcType=INTEGER},
      OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      REL_FLOW_ID = #{record.relFlowId,jdbcType=BIGINT},
      REL_SNAPSHOT_ID = #{record.relSnapshotId,jdbcType=BIGINT},
      REL_NODE_ID = #{record.relNodeId,jdbcType=BIGINT},
      JOB_DFS_DIR = #{record.jobDfsDir,jdbcType=VARCHAR},
      JOB_LOCAL_DIR = #{record.jobLocalDir,jdbcType=VARCHAR},
      NEXT_TASK_SEQUENCE = #{record.nextTaskSequence,jdbcType=BIGINT},
      JOB_SUBMIT_TIME = #{record.jobSubmitTime,jdbcType=TIMESTAMP},
      JOB_START_TIME = #{record.jobStartTime,jdbcType=TIMESTAMP},
      JOB_END_TIME = #{record.jobEndTime,jdbcType=TIMESTAMP},
      JOB_STATE = #{record.jobState,jdbcType=INTEGER},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{record.createOper,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="MysqlSuffix" >
    <if test="page != null" >
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
</mapper>