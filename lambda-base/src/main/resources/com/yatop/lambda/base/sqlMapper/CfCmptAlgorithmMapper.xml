<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yatop.lambda.base.mapper.CfCmptAlgorithmMapper">
  <resultMap id="BaseResultMap" type="com.yatop.lambda.base.model.CfCmptAlgorithm">
    <!--
      WARNING - @mbggenerated
    -->
    <id column="ALGORITHM_ID" jdbcType="BIGINT" property="algorithmId" />
    <result column="ALGORITHM_CODE" jdbcType="VARCHAR" property="algorithmCode" />
    <result column="ALGORITHM_NAME" jdbcType="VARCHAR" property="algorithmName" />
    <result column="ALGORITHM_TYPE" jdbcType="INTEGER" property="algorithmType" />
    <result column="ALGORITHM_LABELS" jdbcType="VARCHAR" property="algorithmLabels" />
    <result column="LEARNING_MODE" jdbcType="INTEGER" property="learningMode" />
    <result column="OPTIMIZE_MODE" jdbcType="INTEGER" property="optimizeMode" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="LAST_UPDATE_TIME" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="LAST_UPDATE_OPER" jdbcType="VARCHAR" property="lastUpdateOper" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_OPER" jdbcType="VARCHAR" property="createOper" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
    -->
    ALGORITHM_ID, ALGORITHM_CODE, ALGORITHM_NAME, ALGORITHM_TYPE, ALGORITHM_LABELS, LEARNING_MODE, 
    OPTIMIZE_MODE, DESCRIPTION, STATUS, LAST_UPDATE_TIME, LAST_UPDATE_OPER, CREATE_TIME, 
    CREATE_OPER
  </sql>
  <select id="selectByExample" parameterType="com.yatop.lambda.base.model.CfCmptAlgorithmExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cf_cmpt_algorithm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.yatop.lambda.base.model.CfCmptAlgorithmExample">
    <!--
      WARNING - @mbggenerated
    -->
    delete from cf_cmpt_algorithm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yatop.lambda.base.model.CfCmptAlgorithmExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from cf_cmpt_algorithm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
    -->
    update cf_cmpt_algorithm
    <set>
      <if test="record.algorithmId != null">
        ALGORITHM_ID = #{record.algorithmId,jdbcType=BIGINT},
      </if>
      <if test="record.algorithmCode != null">
        ALGORITHM_CODE = #{record.algorithmCode,jdbcType=VARCHAR},
      </if>
      <if test="record.algorithmName != null">
        ALGORITHM_NAME = #{record.algorithmName,jdbcType=VARCHAR},
      </if>
      <if test="record.algorithmType != null">
        ALGORITHM_TYPE = #{record.algorithmType,jdbcType=INTEGER},
      </if>
      <if test="record.algorithmLabels != null">
        ALGORITHM_LABELS = #{record.algorithmLabels,jdbcType=VARCHAR},
      </if>
      <if test="record.learningMode != null">
        LEARNING_MODE = #{record.learningMode,jdbcType=INTEGER},
      </if>
      <if test="record.optimizeMode != null">
        OPTIMIZE_MODE = #{record.optimizeMode,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null">
        LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateOper != null">
        LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOper != null">
        CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
    -->
    update cf_cmpt_algorithm
    set ALGORITHM_ID = #{record.algorithmId,jdbcType=BIGINT},
      ALGORITHM_CODE = #{record.algorithmCode,jdbcType=VARCHAR},
      ALGORITHM_NAME = #{record.algorithmName,jdbcType=VARCHAR},
      ALGORITHM_TYPE = #{record.algorithmType,jdbcType=INTEGER},
      ALGORITHM_LABELS = #{record.algorithmLabels,jdbcType=VARCHAR},
      LEARNING_MODE = #{record.learningMode,jdbcType=INTEGER},
      OPTIMIZE_MODE = #{record.optimizeMode,jdbcType=INTEGER},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{record.createOper,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
</mapper>